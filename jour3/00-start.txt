// https://github.com/webdevproformation/nodejs-3wa-nov-21
// cd jour3
// npm init -y

// plusieurs librairies jasmine / mocha / jest 
// jest pendant la phase de développement => dépendance de développement 

// npm i jest -D

// package.json => modifier les valeurs inscrites dans la partie scripts 

// npm test => jest => node_modules/.bin/jest.cmd | jest 

// .test.js | .spec.js 

// ----------------------- 

dans le fichier lib.js créer une fonction qui s'appelle "salutation"
cette fonction dispose d'un paramètre "langue"
traitements dans la fonction 
    si la langue est == "fr" 
     retourner <p>Bonjour</p>
    si la langue est == "en" 
     retourner <p>Hello</p>  
    sinon 
     retourner "langue inconnue"

réaliser les fonctions de test pour vérifier cette fonction 


// ----------------------- 

dans le fichier lib.js créer une fonction qui s'appelle FizzBuzz 
=> paramètre nombre 
fonction retourner soit un nombre soit une chaine de caractères

1 == > 1
2  => 2
3  => Fizz (3 est un multiple de 3)
4 => 4 
5 => "Buzz" (5 est un multiple de 5)
6 => Fizz  (6 est un multiple de 3)
...
15 => FizzBuzz (15 est un multiple de 5 et 3 en même temps )

// une fois que vous avez créer cette fonction, réaliser les tests pour vérifier
// que la logique vous vous avez mis en place dans la fonction est à toutes épreuves 

// rdv 11h15 @ toute suite !! 


dans le fichier lib2.js créer une fonction qui s'appelle rechercheArticle

contient un paramètre "titre"

traitement dans la fonction 
    prendre titre => le mettre en minuscule

    lancer une recherche via la fonction filter() sur la variable suivante
    const bdd = [
        { id : 1 ,titre : "Article1"},
        { id : 2 ,titre : "Article1"},
        { id : 3 ,titre : "Article3"}
    ]
    retourne si la valeur demandée est trouvée dans le tableau => [{},{}]
    retourne si la valeur demandée n'est pas trouvée dans le tableau => []

créer la fonction et réaliser les test pour que vérifier la solidité de vos traitements 

rechercheArticle("Article3") => [{ id : 3 ,titre : "Article3"}]
rechercheArticle("Article1") => [{ id : 1 ,titre : "Article1"} , { id : 2 ,titre : "Article1"}]
rechercheArticle("inconnu")  => []


// ---------------------

dans le fichier lib2.js ajouter la fonction suivante :

exports.palindrome = function (str) { // ""
  if(typeof str !== "string"){
    throw new Error("paramètre incorrect")
  }

  if(typeof str === "string" && str.length === 0){
    throw new Error("paramètre incorrect")
  }

  const plainStr = str.replace(/[^0-9a-z]+/, '').toLowerCase();

  const plainStrReverse = plainStr.split("").reverse().join("");

  if(plainStr === plainStrReverse){
    return true;
  }
  return false;
}
// réaliser les tests unitaires pour vérifier que la fonction palindrome fonctionne bien 

palindrome("laval") => true
palindrome("lol") => true
palindrome("kayak") => true
palindrome("") => false
palindrome("Engage le jeu que je le gagne") => false

palindrome("bonjour")
palindrome("manger") => false regnam